name: Deploy to AWS - Pure Watchtower CI/CD

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  ECR_REPOSITORY: rem-app
  AWS_REGION: ap-south-1

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image
        id: build-image
        run: |
          docker build -t $ECR_REPOSITORY:latest --build-arg APP_BUILD=${{ github.sha }} .
          ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}
          docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }}
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:latest" >> $GITHUB_OUTPUT

      - name: Wait for Watchtower deployment
        run: |
          echo " Enhanced Watchtower deployment started!"
          echo " Image pushed with bulletproof configuration"
          echo "  Expected update time: 2-4 minutes"
          
          # Get the Elastic IP of the single EC2 instance
          EC2_IP=$(aws ec2 describe-addresses --region $AWS_REGION --query 'Addresses[?Tags[?Key==`Name` && Value==`rem-eip`]].PublicIp' --output text)
          EXPECTED_BUILD="${{ github.sha }}"
          
          echo " Monitoring deployment at: http://$EC2_IP:8000"
          echo " Waiting for build: $EXPECTED_BUILD"
          
          for attempt in {1..8}; do
            echo " Check $attempt/8..."
            sleep $((30 + attempt * 15))
            
            VERSION_RESPONSE=$(curl -s --connect-timeout 10 "http://$EC2_IP:8000/api/version" || echo "{}")
            CURRENT_BUILD=$(echo "$VERSION_RESPONSE" | jq -r '.build // "unknown"')
            
            if [ "$CURRENT_BUILD" = "$EXPECTED_BUILD" ]; then
              echo " ✅ Watchtower deployment successful!"
              echo " 🚀 Application live at: http://$EC2_IP:8000"
              break
            fi
            echo " Current: $CURRENT_BUILD, waiting..."
            
            if [ $attempt -eq 8 ]; then
              echo " ⚠️  Deployment verification timeout (may still be deploying)"
            fi
          done

      - name: Deployment summary
        run: |
          EC2_IP=$(aws ec2 describe-addresses --region $AWS_REGION --query 'Addresses[?Tags[?Key==`Name` && Value==`rem-eip`]].PublicIp' --output text)
          echo "## 🚀 Simplified Watchtower Deployed!" >> $GITHUB_STEP_SUMMARY
          echo "- 🌐 **Application URL**: http://$EC2_IP:8000" >> $GITHUB_STEP_SUMMARY
          echo "- ⚡ **Auto-updates**: Every 2 minutes" >> $GITHUB_STEP_SUMMARY
          echo "- 🔐 **ECR auth refresh**: Every 6 hours" >> $GITHUB_STEP_SUMMARY
          echo "- 📊 **Simple & Reliable**: Single EC2 + Elastic IP" >> $GITHUB_STEP_SUMMARY
          echo "- 🎯 **Fixed UI**: Personality modes, quick actions, chat history" >> $GITHUB_STEP_SUMMARY
