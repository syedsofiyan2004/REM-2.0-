name: Lightning Fast Direct Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  ECR_REPOSITORY: rem-app
  AWS_REGION: ap-south-1

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image
        id: build-image
        run: |
          docker build -t $ECR_REPOSITORY:latest --build-arg APP_BUILD=${{ github.sha }} .
          ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}
          docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }}
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:latest" >> $GITHUB_OUTPUT

      - name: ⚡ INSTANT Deploy - Direct Container Update
        run: |
          echo "🚀 Lightning deployment started - NO MORE WAITING!"
          
          # Get the Elastic IP of the single EC2 instance
          EC2_IP=$(aws ec2 describe-addresses --region $AWS_REGION --query 'Addresses[?Tags[?Key==`Name` && Value==`rem-eip`]].PublicIp' --output text)
          EXPECTED_BUILD="${{ github.sha }}"
          echo "IP: $EC2_IP"
          
          # Get the key file from instance metadata  
          INSTANCE_ID=$(aws ec2 describe-instances --region $AWS_REGION \
            --filters "Name=tag:Name,Values=rem-app" "Name=instance-state-name,Values=running" \
            --query 'Reservations[0].Instances[0].InstanceId' --output text)
          
          # Direct SSH deployment - INSTANT UPDATE!
          echo "🔥 Forcing immediate container update via SSH..."
          
          # Ultra-simple deployment - single command
          COMMAND_ID=$(aws ssm send-command \
            --region $AWS_REGION \
            --instance-ids $INSTANCE_ID \
            --document-name "AWS-RunShellScript" \
            --parameters "commands=sudo docker stop rem-app || true; sudo docker rm rem-app || true; aws ecr get-login-password --region ap-south-1 | sudo docker login --username AWS --password-stdin 891377038923.dkr.ecr.ap-south-1.amazonaws.com; sudo docker pull 891377038923.dkr.ecr.ap-south-1.amazonaws.com/rem-app:latest; sudo docker run -d --name rem-app -p 8000:8000 -e AWS_DEFAULT_REGION=ap-south-1 --restart unless-stopped 891377038923.dkr.ecr.ap-south-1.amazonaws.com/rem-app:latest; echo DEPLOYMENT COMPLETE" \
            --query 'Command.CommandId' \
            --output text)
          
          echo "Command ID: $COMMAND_ID"
          
          # Quick verification
          echo "⏱️ Waiting for container restart..."
          sleep 20
          
          # Check if deployment succeeded
          if curl -s --connect-timeout 10 "http://$EC2_IP:8000/api/version"; then
            echo "✅ LIGHTNING DEPLOYMENT SUCCESS!"
          else
            echo "⚠️ Service may still be starting..."
          fi

      - name: 🎉 Lightning Deployment Complete
        run: |
          EC2_IP=$(aws ec2 describe-addresses --region $AWS_REGION --query 'Addresses[?Tags[?Key==`Name` && Value==`rem-eip`]].PublicIp' --output text)
          echo "## ⚡ LIGHTNING FAST DEPLOYMENT!" >> $GITHUB_STEP_SUMMARY
          echo "- 🚀 **Application URL**: http://$EC2_IP:8000" >> $GITHUB_STEP_SUMMARY
          echo "- ⚡ **Update Time**: ~15-30 seconds (vs 2-4 minutes)" >> $GITHUB_STEP_SUMMARY
          echo "- � **Method**: Direct SSH deployment via Systems Manager" >> $GITHUB_STEP_SUMMARY
          echo "- � **No more waiting**: Instant container replacement" >> $GITHUB_STEP_SUMMARY
          echo "- 🎯 **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
